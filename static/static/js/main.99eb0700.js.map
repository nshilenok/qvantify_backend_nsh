{"version":3,"file":"static/js/main.99eb0700.js","mappings":"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","sources":["themes/Draftbit.js","LinkingConfiguration.js","config/GlobalVariableContext.js","global-functions/getExternalId.js","global-functions/getFirstAnswer.js","global-functions/getSurveyParam.js","utils/Breakpoints.js","utils/useWindowDimensions.js","GlobalStyles.js","components/HeaderBlock.js","global-functions/changeURL.js","screens/ErrorScreen.js","screens/IndexRedirectScreen.js","screens/SuccessScreen.js","utils/handleRestApiResponse.js","utils/usePrevious.js","utils/encodeQueryParam.js","apis/BackendApi.js","screens/TopicScreen.js","screens/WelcomeScreen.js","AppNavigator.js","config/Images.js","config/cacheAssetsAsync.js","config/Fonts.js","App.js","../../src/utils/StyleSheet.js","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { systemWeights } from 'react-native-typography';\nexport default {\n  disabledOpacity: 0.5,\n  roundness: 6,\n  colors: {\n    '! Disabled Text': 'rgba(0, 0, 0, 0.4)',\n    '! HR Line': 'rgba(0, 0, 0, 0.08)',\n    '! Input bckg': 'rgb(245, 247, 251)',\n    '! WHITE': 'rgb(255, 255, 255)',\n    Background: 'rgba(251, 252, 253, 1)',\n    'Custom Color': 'rgb(69, 191, 66)',\n    Divider: 'rgba(234, 237, 242, 1)',\n    Error: 'rgba(255, 69, 100, 1)',\n    Light: 'rgba(165, 173, 183, 1)',\n    'Light Inverse': 'rgba(255, 255, 255, 0.68)',\n    Medium: 'rgba(70, 78, 88, 1)',\n    'Medium Inverse': 'rgba(255, 255, 255, 0.87)',\n    Primary: 'rgba(90, 69, 255, 1)',\n    Secondary: 'rgba(59, 201, 234, 1)',\n    Strong: 'rgba(18, 20, 44, 1)',\n    'Strong Inverse': 'rgba(255, 255, 255, 1)',\n    Surface: 'rgba(255, 255, 255, 1)',\n    background: 'rgba(251, 252, 253, 1)',\n    custom_rgb69_191_66: 'rgb(69, 191, 66)',\n    disabledText: 'rgba(0, 0, 0, 0.4)',\n    divider: 'rgba(234, 237, 242, 1)',\n    error: 'rgba(255, 69, 100, 1)',\n    hRLine: 'rgba(0, 0, 0, 0.08)',\n    inputBckg: 'rgb(245, 247, 251)',\n    light: 'rgba(165, 173, 183, 1)',\n    lightInverse: 'rgba(255, 255, 255, 0.68)',\n    medium: 'rgba(70, 78, 88, 1)',\n    mediumInverse: 'rgba(255, 255, 255, 0.87)',\n    primary: 'rgba(90, 69, 255, 1)',\n    secondary: 'rgba(59, 201, 234, 1)',\n    strong: 'rgba(18, 20, 44, 1)',\n    strongInverse: 'rgba(255, 255, 255, 1)',\n    surface: 'rgba(255, 255, 255, 1)',\n    wHITE: 'rgb(255, 255, 255)',\n    zAccent: 'rgb(90, 69, 255)',\n    zBase: 'rgb(250, 252, 254)',\n    zContrast: 'rgba(0, 0, 0, 0.6)',\n  },\n  typography: {\n    body1: {\n      ...systemWeights.regular,\n      fontSize: 16,\n      letterSpacing: 0,\n      lineHeight: 26,\n    },\n    body2: {\n      ...systemWeights.regular,\n      fontSize: 14,\n      letterSpacing: 0,\n      lineHeight: 22,\n    },\n    button: {\n      ...systemWeights.bold,\n      fontSize: 14,\n      letterSpacing: 0,\n      lineHeight: 16,\n    },\n    caption: {\n      ...systemWeights.regular,\n      fontSize: 12,\n      letterSpacing: 0,\n      lineHeight: 16,\n    },\n    headline1: {\n      ...systemWeights.bold,\n      fontSize: 60,\n      letterSpacing: 0,\n      lineHeight: 71,\n    },\n    headline2: {\n      ...systemWeights.bold,\n      fontSize: 48,\n      letterSpacing: 0,\n      lineHeight: 58,\n    },\n    headline3: {\n      ...systemWeights.bold,\n      fontSize: 34,\n      letterSpacing: 0,\n      lineHeight: 40,\n    },\n    headline4: {\n      ...systemWeights.bold,\n      fontSize: 24,\n      letterSpacing: 0,\n      lineHeight: 34,\n    },\n    headline5: {\n      ...systemWeights.bold,\n      fontSize: 20,\n      letterSpacing: 0,\n      lineHeight: 26,\n    },\n    headline6: {\n      ...systemWeights.bold,\n      fontSize: 16,\n      letterSpacing: 0,\n      lineHeight: 24,\n    },\n    overline: {\n      ...systemWeights.regular,\n      fontSize: 12,\n      letterSpacing: 2,\n      lineHeight: 16,\n    },\n    subtitle1: {\n      ...systemWeights.regular,\n      fontSize: 16,\n      letterSpacing: 0,\n      lineHeight: 26,\n    },\n    subtitle2: {\n      ...systemWeights.regular,\n      fontSize: 14,\n      letterSpacing: 0,\n      lineHeight: 22,\n    },\n  },\n};\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\n\nfunction renderLinkingPrefix() {\n  try {\n    return Linking.createURL('/');\n  } catch (e) {\n    return 'draftbit://';\n  }\n}\n\nconst prefix = renderLinkingPrefix();\n\nconst linking = {\n  enabled: Platform.OS === 'web' ? false : true,\n  prefixes: [prefix],\n  config: {\n    screens: {},\n  },\n};\n\nexport default linking;\n","import React from 'react';\nimport { View, ActivityIndicator } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const DeviceVariables = {\n  colours: '',\n  darkmode_scheme: {\n    zbase: '#1E1E1E',\n    hrline: '#343434',\n    inputbckg: '#232323',\n    zcontrast: '#D2D2D2',\n    disabledtext: '#A5A5A5',\n  },\n  externalID: '',\n  first_answer: '',\n  project: null,\n  project_details: null,\n  question: '',\n  user_id: null,\n  __env__: 'Production',\n};\nexport const AppVariables = {};\nconst GlobalVariableContext = React.createContext();\nconst GlobalVariableUpdater = React.createContext();\nconst keySuffix = '';\n\n// Attempt to parse a string as JSON. If the parse fails, return the string as-is.\n// This is necessary to account for variables which are already present in local\n// storage, but were not stored in JSON syntax (e.g. 'hello' instead of '\"hello\"').\nfunction tryParseJson(str) {\n  try {\n    return JSON.parse(str);\n  } catch {\n    return str;\n  }\n}\n\nclass GlobalVariable {\n  /**\n   *  Filters an object of key-value pairs for those that should be\n   *  persisted to storage, and persists them.\n   *\n   *  @param values Record<string, string>\n   */\n  static async syncToLocalStorage(values) {\n    const update = Object.entries(values)\n      .filter(([key]) => key in DeviceVariables)\n      .map(([key, value]) => [key + keySuffix, JSON.stringify(value)]);\n\n    if (update.length > 0) {\n      await AsyncStorage.multiSet(update);\n    }\n\n    return update;\n  }\n\n  static async loadLocalStorage() {\n    const keys = Object.keys(DeviceVariables);\n    const entries = await AsyncStorage.multiGet(\n      keySuffix ? keys.map(k => k + keySuffix) : keys\n    );\n\n    // If values isn't set, use the default. These will be written back to\n    // storage on the next render.\n    const withDefaults = entries.map(([key_, value]) => {\n      // Keys only have the suffix appended in storage; strip the key\n      // after they are retrieved\n      const key = keySuffix ? key_.replace(keySuffix, '') : key_;\n      return [key, value ? tryParseJson(value) : DeviceVariables[key]];\n    });\n\n    return Object.fromEntries(withDefaults);\n  }\n}\n\nclass State {\n  static defaultValues = {\n    ...AppVariables,\n    ...DeviceVariables,\n  };\n\n  static reducer(state, { type, payload }) {\n    switch (type) {\n      case 'RESET':\n        return { values: State.defaultValues, __loaded: true };\n      case 'LOAD_FROM_ASYNC_STORAGE':\n        return { values: { ...state.values, ...payload }, __loaded: true };\n      case 'UPDATE':\n        return state.__loaded\n          ? {\n              ...state,\n              values: {\n                ...state.values,\n                [payload.key]: payload.value,\n              },\n            }\n          : state;\n      default:\n        return state;\n    }\n  }\n\n  static initialState = {\n    __loaded: false,\n    values: State.defaultValues,\n  };\n}\n\nexport function GlobalVariableProvider({ children }) {\n  const [state, dispatch] = React.useReducer(State.reducer, State.initialState);\n\n  React.useEffect(() => {\n    async function prepare() {\n      await SplashScreen.preventAutoHideAsync();\n    }\n\n    prepare();\n  }, []);\n\n  // This effect runs on mount to overwrite the default value of any\n  // key that has a local value.\n  React.useEffect(() => {\n    async function initialStorageLoader() {\n      try {\n        const payload = await GlobalVariable.loadLocalStorage();\n        if (\n          payload?.__env__ &&\n          DeviceVariables.__env__ &&\n          payload.__env__ !== DeviceVariables.__env__\n        ) {\n          console.log(\n            `Publication Environment changed from ${payload.__env__} to ${DeviceVariables.__env__}. Refreshing variables`\n          );\n          dispatch({\n            type: 'LOAD_FROM_ASYNC_STORAGE',\n            payload: DeviceVariables,\n          });\n        } else {\n          dispatch({ type: 'LOAD_FROM_ASYNC_STORAGE', payload });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    initialStorageLoader();\n  }, []);\n\n  // This effect runs on every state update after the initial load. Gives us\n  // best of both worlds: React state updates sync, but current state made\n  // durable next async tick.\n  React.useEffect(() => {\n    async function syncToAsyncStorage() {\n      try {\n        await GlobalVariable.syncToLocalStorage(state.values);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (state.__loaded) {\n      syncToAsyncStorage();\n    }\n  }, [state]);\n\n  const onLayoutRootView = React.useCallback(async () => {\n    if (state.__loaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [state.__loaded]);\n\n  // We won't want an app to read a default state when there might be one\n  // incoming from storage.\n  if (!state.__loaded) {\n    return null;\n  }\n\n  return (\n    <GlobalVariableUpdater.Provider\n      value={dispatch}\n      onLayout={onLayoutRootView}\n    >\n      <GlobalVariableContext.Provider value={state.values}>\n        {children}\n      </GlobalVariableContext.Provider>\n    </GlobalVariableUpdater.Provider>\n  );\n}\n\n// Hooks\nexport function useSetValue() {\n  const dispatch = React.useContext(GlobalVariableUpdater);\n  return ({ key, value }) => {\n    dispatch({ type: 'UPDATE', payload: { key, value } });\n    return value;\n  };\n}\n\nexport function useValues() {\n  return React.useContext(GlobalVariableContext);\n}\n","import React from 'react';\n\nconst getExternalId = () => {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const externalId = urlParams.get('external_id');\n\n  if (externalId) {\n    return externalId;\n  } else {\n    return '';\n  }\n};\n\nexport default getExternalId;\n","import React from 'react';\n\nconst getFirstAnswer = () => {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const firstAnswer = urlParams.get('first_answer');\n\n  if (firstAnswer) {\n    return firstAnswer;\n  } else {\n    return '';\n  }\n};\n\nexport default getFirstAnswer;\n","import React from 'react';\n\nconst getSurveyParam = () => {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const surveyValue = urlParams.get('interview');\n\n  if (surveyValue) {\n    return surveyValue;\n  } else {\n    return '';\n  }\n};\n\nexport default getSurveyParam;\n","export default {\n  Mobile: 0,\n  Tablet: 480,\n  Laptop: 992,\n  Desktop: 1440,\n  BigScreen: 1920,\n};\n","import React from 'react';\nimport {\n  useWindowDimensions as useDefaultWindowDimensions,\n  Platform,\n} from 'react-native';\n\n/**\n * On web, the default implementation of `useWindowDimensions` returns dimensions excluding the scroll bar size\n * which causes inconsistencies with breakpoints, this ensures scroll bars do not affect the values of `useWindowDimensions`\n */\nconst useWindowDimensions = () => {\n  const dimensions = useDefaultWindowDimensions();\n\n  if (Platform.OS === 'web') {\n    return {\n      ...dimensions,\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  return dimensions;\n};\n\nexport default useWindowDimensions;\n","import * as StyleSheet from './utils/StyleSheet';\n\nimport Breakpoints from './utils/Breakpoints';\n\nexport const CheckboxStyles = theme => StyleSheet.create({});\n\nexport const TextInputStyles = theme =>\n  StyleSheet.create({\n    'Answer Input': {\n      backgroundColor: theme.colors['! Input bckg'],\n      borderBottomLeftRadius: 4,\n      borderBottomRightRadius: 4,\n      borderBottomWidth: 1,\n      borderColor: theme.colors['! HR Line'],\n      borderLeftWidth: 1,\n      borderRadius: 8,\n      borderRightWidth: 1,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      borderTopWidth: 1,\n      fontFamily: 'Inter_400Regular',\n      marginTop: 16,\n      paddingBottom: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingTop: 16,\n    },\n    'Input Field': {\n      backgroundColor: theme.colors['! Input bckg'],\n      borderBottomLeftRadius: 4,\n      borderBottomRightRadius: 4,\n      borderBottomWidth: 1,\n      borderColor: theme.colors['! HR Line'],\n      borderLeftWidth: 1,\n      borderRadius: 8,\n      borderRightWidth: 1,\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n      borderTopWidth: 1,\n      fontFamily: 'Inter_400Regular',\n      fontSize: { minWidth: Breakpoints.Tablet, value: 16 },\n      marginBottom: 8,\n      marginTop: 8,\n      paddingBottom: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingTop: 16,\n    },\n    'Text Input': {\n      borderBottomWidth: 1,\n      borderColor: theme.colors.divider,\n      borderLeftWidth: 1,\n      borderRadius: 8,\n      borderRightWidth: 1,\n      borderTopWidth: 1,\n      paddingBottom: 8,\n      paddingLeft: 8,\n      paddingRight: 8,\n      paddingTop: 8,\n    },\n  });\n\nexport const BlurViewStyles = theme =>\n  StyleSheet.create({\n    'Blur View': { flexBasis: 0, flexGrow: 1, flexShrink: 1 },\n  });\n\nexport const ButtonStyles = theme =>\n  StyleSheet.create({\n    'Button CTA': {\n      backgroundColor: theme.colors['! Title'],\n      borderRadius: 8,\n      fontFamily: 'Inter_700Bold',\n      fontSize: { minWidth: Breakpoints.Laptop, value: 16 },\n      marginLeft: 12,\n      textAlign: 'center',\n    },\n    'Button CTA Secondary': {\n      backgroundColor: theme.colors['! Title'],\n      borderRadius: 8,\n      fontFamily: 'Inter_700Bold',\n      fontSize: { minWidth: Breakpoints.Laptop, value: 16 },\n      marginLeft: 12,\n      textAlign: 'center',\n    },\n  });\n\nexport const CheckboxRowStyles = theme =>\n  StyleSheet.create({ 'Checkbox Row': { minHeight: 50 } });\n\nexport const KeyboardAwareScrollViewStyles = theme =>\n  StyleSheet.create({\n    'Content Div': {\n      paddingBottom: 32,\n      paddingLeft: 32,\n      paddingRight: 32,\n      paddingTop: 32,\n    },\n    'Scrollable Content Div': {\n      paddingBottom: 32,\n      paddingLeft: 32,\n      paddingRight: 32,\n      paddingTop: 32,\n    },\n  });\n\nexport const FetchStyles = theme =>\n  StyleSheet.create({ Fetch: { minHeight: 40 } });\n\nexport const ImageStyles = theme =>\n  StyleSheet.create({ Image: { height: 24, width: 110 } });\n\nexport const PressableStyles = theme =>\n  StyleSheet.create({ Pressable: { width: 80 }, 'Pressable 2': { width: 80 } });\n\nexport const SVGStyles = theme =>\n  StyleSheet.create({ SVG: { height: 100, width: 100 } });\n\nexport const ScreenContainerStyles = theme =>\n  StyleSheet.create({\n    'Screen Layout': {\n      flexDirection: [\n        { minWidth: Breakpoints.Tablet, value: 'row' },\n        { minWidth: Breakpoints.Mobile, value: 'column' },\n      ],\n    },\n  });\n\nexport const TextStyles = theme =>\n  StyleSheet.create({\n    Text: { color: theme.colors.strong },\n    'admin text': { color: theme.colors['Medium'], fontSize: 8 },\n    body: {\n      alignSelf: { minWidth: Breakpoints.Tablet, value: 'flex-start' },\n      color: theme.colors['zContrast'],\n      fontSize: { minWidth: Breakpoints.Tablet, value: 16 },\n      marginBottom: { minWidth: Breakpoints.Laptop, value: 16 },\n      paddingBottom: 16,\n    },\n    h1: { color: theme.colors.strong },\n    h2: {\n      color: theme.colors.strong,\n      fontFamily: 'Inter_600SemiBold',\n      fontSize: 20,\n      paddingBottom: 8,\n    },\n    title: {\n      alignSelf: { minWidth: Breakpoints.Tablet, value: 'flex-start' },\n      color: theme.colors['zAccent'],\n      fontFamily: 'Inter_600SemiBold',\n      fontSize: [\n        { minWidth: Breakpoints.Mobile, value: 10 },\n        { minWidth: Breakpoints.Tablet, value: 14 },\n      ],\n      paddingBottom: 8,\n      textTransform: 'uppercase',\n    },\n  });\n\nexport const ViewStyles = theme =>\n  StyleSheet.create({\n    'Footer Div': {\n      alignItems: 'flex-end',\n      borderColor: theme.colors['! HR Line'],\n      paddingBottom: 32,\n      paddingLeft: 32,\n      paddingRight: 32,\n    },\n    Header: {\n      alignItems: 'center',\n      backgroundColor: theme.colors['zBase'],\n      borderBottomWidth: 1,\n      borderColor: theme.colors['! HR Line'],\n      borderRightWidth: { minWidth: Breakpoints.Tablet, value: 1 },\n      paddingBottom: 32,\n      paddingLeft: 32,\n      paddingRight: 32,\n      paddingTop: 32,\n    },\n    'Main Frame Div': {\n      alignItems: { minWidth: Breakpoints.Tablet, value: 'center' },\n      backgroundColor: theme.colors['zBase'],\n      flexGrow: [\n        { minWidth: Breakpoints.Tablet, value: 1 },\n        { minWidth: Breakpoints.Mobile, value: 1 },\n      ],\n      justifyContent: [\n        { minWidth: Breakpoints.Tablet, value: 'center' },\n        { minWidth: Breakpoints.Mobile, value: 'space-between' },\n      ],\n      width: { minWidth: Breakpoints.Tablet, value: '50%' },\n    },\n    'admin view': {\n      backgroundColor: theme.colors['! WHITE'],\n      marginLeft: 32,\n      marginRight: 32,\n      marginTop: 32,\n    },\n    'max width container': {\n      height: '100%',\n      justifyContent: [\n        { minWidth: Breakpoints.Mobile, value: 'flex-start' },\n        { minWidth: Breakpoints.Tablet, value: 'center' },\n      ],\n      maxWidth: { minWidth: Breakpoints.Tablet, value: 620 },\n      minWidth: { minWidth: Breakpoints.Tablet, value: 620 },\n    },\n    'question div': {\n      backgroundColor: theme.colors['! WHITE'],\n      borderColor: theme.colors['! HR Line'],\n      minHeight: 140,\n      paddingBottom: 32,\n    },\n  });\n\nexport const IconStyles = theme =>\n  StyleSheet.create({ icon: { marginBottom: 16 } });\n\nexport const KeyboardAvoidingViewStyles = theme =>\n  StyleSheet.create({\n    'keyboard avoiding view': {\n      paddingBottom: 32,\n      paddingLeft: 32,\n      paddingRight: 32,\n      paddingTop: 32,\n    },\n  });\n\nexport const LinkStyles = theme =>\n  StyleSheet.create({ Link: { color: theme.colors['zAccent'] } });\n","import React from 'react';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport { withTheme } from '@draftbit/ui';\nimport { Image, View } from 'react-native';\n\nconst HeaderBlock = props => {\n  const { theme } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const getProjectTopic = (timestamp, projectTopics) => {\n    // Parse the timestamp into a Date object\n    const pastDate = new Date(timestamp);\n\n    // Get the current date\n    const now = new Date();\n\n    // Calculate the difference in milliseconds\n    const diffInMs = now - pastDate;\n\n    // Convert milliseconds to minutes and round down\n    const minPassed = Math.floor(diffInMs / (60 * 1000));\n\n    // Loop through the projectTopics array\n    for (let i = 0; i < projectTopics.length; i++) {\n      // If quit_after of the current project topic is greater than minPassed\n      if (projectTopics[i].quit_after > minPassed) {\n        // Return the project topic\n        return projectTopics[i];\n      }\n    }\n\n    // If no project topic was found that satisfies the condition, return \"exit\"\n    return 'exit';\n  };\n\n  const calculateMinutesPassed = timestamp => {\n    // Parse the timestamp into a Date object\n    const pastDate = new Date(timestamp);\n\n    // Get the current date\n    const now = new Date();\n\n    // Calculate the difference in milliseconds\n    const diffInMs = now - pastDate;\n\n    // Convert milliseconds to minutes and round down\n    // Note: 1 minute = 60,000 milliseconds\n    const diffInMinutes = Math.floor(diffInMs / (60 * 1000));\n\n    return diffInMinutes;\n  };\n\n  const waitQuestionsStored = async Variables => {\n    try {\n      // ensure first POST request is completed\n      await researchDBSaveQuestion$AnswerPOST.mutateAsync({\n        message: Constants['question'],\n        proejct_id: Constants['project'],\n        role: 'assistant',\n        topicID: topic_id,\n        user_id: Constants['user_id'],\n      });\n\n      // ensure second POST request is completed\n      await researchDBSaveQuestion$AnswerPOST.mutateAsync({\n        message: input,\n        proejct_id: Constants['project'],\n        role: 'user',\n        topicID: topic_id,\n        user_id: Constants['user_id'],\n      });\n\n      // only after both POST requests have completed, initiate refetch\n      await refetchHistory();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <View\n      style={StyleSheet.applyWidth(\n        StyleSheet.compose(GlobalStyles.ViewStyles(theme)['Header'], {\n          backgroundColor: Constants['colours']?.zbase,\n          borderColor: Constants['colours']?.hrline,\n        }),\n        dimensions.width\n      )}\n    >\n      <Image\n        resizeMode={'contain'}\n        source={{\n          uri: `${\n            Constants['project_details'] && Constants['project_details'][0].logo\n          }`,\n        }}\n        style={StyleSheet.applyWidth(\n          GlobalStyles.ImageStyles(theme)['Image'],\n          dimensions.width\n        )}\n      />\n    </View>\n  );\n};\n\nexport default withTheme(HeaderBlock);\n","import React from 'react';\n\nconst changeURL = url => {\n  window.open(url, '_blank');\n};\n\nexport default changeURL;\n","import React from 'react';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport HeaderBlock from '../components/HeaderBlock';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport changeURL from '../global-functions/changeURL';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport {\n  Button,\n  Icon,\n  KeyboardAvoidingView,\n  ScreenContainer,\n  withTheme,\n} from '@draftbit/ui';\nimport { Text, View } from 'react-native';\n\nconst ErrorScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const GenerateUserID = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n  };\n\n  return (\n    <ScreenContainer\n      hasSafeArea={false}\n      hasTopSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        GlobalStyles.ScreenContainerStyles(theme)['Screen Layout'],\n        dimensions.width\n      )}\n    >\n      <HeaderBlock />\n      {/* Main Frame (Welcome) */}\n      <View\n        style={StyleSheet.applyWidth(\n          GlobalStyles.ViewStyles(theme)['Main Frame Div'],\n          dimensions.width\n        )}\n      >\n        {/* max width container */}\n        <View\n          style={StyleSheet.applyWidth(\n            StyleSheet.compose(\n              GlobalStyles.ViewStyles(theme)['max width container'],\n              { maxWidth: { minWidth: Breakpoints.Tablet, value: 720 } }\n            ),\n            dimensions.width\n          )}\n        >\n          <KeyboardAvoidingView\n            behavior={'padding'}\n            enabled={true}\n            style={StyleSheet.applyWidth(\n              GlobalStyles.KeyboardAvoidingViewStyles(theme)[\n                'keyboard avoiding view'\n              ],\n              dimensions.width\n            )}\n          >\n            <Icon\n              color={theme.colors['! HR Line']}\n              name={'Ionicons/ios-information-circle-outline'}\n              size={56}\n              style={StyleSheet.applyWidth(\n                GlobalStyles.IconStyles(theme)['icon'],\n                dimensions.width\n              )}\n            />\n            {/* Success Title */}\n            <Text\n              style={StyleSheet.applyWidth(\n                GlobalStyles.TextStyles(theme)['title'],\n                dimensions.width\n              )}\n            >\n              {props.route?.params?.error_type ?? 'Error'}\n            </Text>\n            {/* Suceess Message */}\n            <Text\n              style={StyleSheet.applyWidth(\n                GlobalStyles.TextStyles(theme)['body'],\n                dimensions.width\n              )}\n            >\n              {\n                \"To join the interview, you'll need a valid URL that includes the interview ID for the active project. If you encounter any issues, please contact the organizer for assistance.\"\n              }\n            </Text>\n          </KeyboardAvoidingView>\n          {/* Footer */}\n          <View\n            style={StyleSheet.applyWidth(\n              GlobalStyles.ViewStyles(theme)['Footer Div'],\n              dimensions.width\n            )}\n          >\n            {/* CTA Button */}\n            <View\n              style={StyleSheet.applyWidth(\n                { alignSelf: 'flex-end', flexDirection: 'row' },\n                dimensions.width\n              )}\n            >\n              {/* Visit */}\n              <Button\n                disabledOpacity={0.3}\n                onPress={() => {\n                  console.log('Visit ON_PRESS Start');\n                  let error = null;\n                  try {\n                    console.log('Start ON_PRESS:0 CUSTOM_FUNCTION');\n                    changeURL('https://www.qvantify.com');\n                    console.log('Complete ON_PRESS:0 CUSTOM_FUNCTION');\n                  } catch (err) {\n                    console.error(err);\n                    error = err.message ?? err;\n                  }\n                  console.log(\n                    'Visit ON_PRESS Complete',\n                    error ? { error } : 'no error'\n                  );\n                }}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(\n                    GlobalStyles.ButtonStyles(theme)['Button CTA Secondary'],\n                    {\n                      backgroundColor: theme.colors['! WHITE'],\n                      borderColor: theme.colors['zAccent'],\n                      color: theme.colors['zAccent'],\n                    }\n                  ),\n                  dimensions.width\n                )}\n                title={'Visit Qvantify'}\n              />\n              {/* Reload */}\n              <Button\n                disabledOpacity={0.3}\n                onPress={() => {\n                  console.log('Reload ON_PRESS Start');\n                  let error = null;\n                  try {\n                    console.log('Start ON_PRESS:0 NAVIGATE');\n                    navigation.navigate('WelcomeScreen');\n                    console.log('Complete ON_PRESS:0 NAVIGATE');\n                  } catch (err) {\n                    console.error(err);\n                    error = err.message ?? err;\n                  }\n                  console.log(\n                    'Reload ON_PRESS Complete',\n                    error ? { error } : 'no error'\n                  );\n                }}\n                style={StyleSheet.applyWidth(\n                  GlobalStyles.ButtonStyles(theme)['Button CTA'],\n                  dimensions.width\n                )}\n                title={'Try again'}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(ErrorScreen);\n","import React from 'react';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport getExternalId from '../global-functions/getExternalId';\nimport getFirstAnswer from '../global-functions/getFirstAnswer';\nimport getSurveyParam from '../global-functions/getSurveyParam';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport { SVG, ScreenContainer, withTheme } from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\n\nconst IndexRedirectScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setGlobalVariableValue({\n        key: 'question',\n        value: '',\n      });\n      setGlobalVariableValue({\n        key: 'project_details',\n        value: '',\n      });\n      if (getSurveyParam() !== '') {\n        const survey = getSurveyParam();\n        const FirstAnswer = getFirstAnswer();\n        const externalId = getExternalId();\n        if (externalId !== Constants['externalID']) {\n          setGlobalVariableValue({\n            key: 'user_id',\n            value: '',\n          });\n        } else {\n          if (Constants['project'] !== survey) {\n            setGlobalVariableValue({\n              key: 'user_id',\n              value: '',\n            });\n          } else {\n          }\n        }\n\n        setGlobalVariableValue({\n          key: 'first_answer',\n          value: FirstAnswer,\n        });\n        setGlobalVariableValue({\n          key: 'externalID',\n          value: externalId,\n        });\n        setGlobalVariableValue({\n          key: 'project',\n          value: survey,\n        });\n        navigation.navigate('WelcomeScreen');\n      } else {\n        navigation.navigate('ErrorScreen', {\n          error_type: 'Interview ID is missing',\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={false}\n      hasTopSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        { alignItems: 'center', justifyContent: 'center' },\n        dimensions.width\n      )}\n    >\n      <SVG\n        source={\n          'https://lwwyepvurqddbcbggdvm.supabase.co/storage/v1/object/public/files/Ellipsis-3.7s-200px.svg'\n        }\n        style={StyleSheet.applyWidth(\n          GlobalStyles.SVGStyles(theme)['SVG'],\n          dimensions.width\n        )}\n      />\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(IndexRedirectScreen);\n","import React from 'react';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport HeaderBlock from '../components/HeaderBlock';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport {\n  Button,\n  Icon,\n  KeyboardAvoidingView,\n  ScreenContainer,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Text, View } from 'react-native';\n\nconst SuccessScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const GenerateUserID = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n  };\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setGlobalVariableValue({\n        key: 'question',\n        value: '',\n      });\n      setGlobalVariableValue({\n        key: 'user_id',\n        value: '',\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={false}\n      hasTopSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        GlobalStyles.ScreenContainerStyles(theme)['Screen Layout'],\n        dimensions.width\n      )}\n    >\n      <>\n        {Constants['project_details'] &&\n        Constants['project_details'][0].skip_welcome ? null : (\n          <HeaderBlock />\n        )}\n      </>\n      {/* Main Frame (Welcome) */}\n      <View\n        style={StyleSheet.applyWidth(\n          StyleSheet.compose(GlobalStyles.ViewStyles(theme)['Main Frame Div'], {\n            backgroundColor: Constants['colours']?.zbase,\n          }),\n          dimensions.width\n        )}\n      >\n        {/* max width container */}\n        <View\n          style={StyleSheet.applyWidth(\n            StyleSheet.compose(\n              GlobalStyles.ViewStyles(theme)['max width container'],\n              { maxWidth: { minWidth: Breakpoints.Tablet, value: 720 } }\n            ),\n            dimensions.width\n          )}\n        >\n          <KeyboardAvoidingView\n            behavior={'padding'}\n            enabled={true}\n            style={StyleSheet.applyWidth(\n              GlobalStyles.KeyboardAvoidingViewStyles(theme)[\n                'keyboard avoiding view'\n              ],\n              dimensions.width\n            )}\n          >\n            <>\n              {Constants['project_details'] &&\n              Constants['project_details'][0].skip_welcome ? null : (\n                <Icon\n                  color={theme.colors['! HR Line']}\n                  name={'Ionicons/checkmark-circle-outline'}\n                  size={56}\n                  style={StyleSheet.applyWidth(\n                    GlobalStyles.IconStyles(theme)['icon'],\n                    dimensions.width\n                  )}\n                />\n              )}\n            </>\n            {/* Success Title */}\n            <Text\n              style={StyleSheet.applyWidth(\n                StyleSheet.compose(GlobalStyles.TextStyles(theme)['title'], {\n                  color:\n                    Constants['project_details'] &&\n                    Constants['project_details'][0].colour,\n                }),\n                dimensions.width\n              )}\n            >\n              {Constants['project_details'] &&\n                Constants['project_details'][0].success_title}\n            </Text>\n            {/* Suceess Message */}\n            <Text\n              style={StyleSheet.applyWidth(\n                StyleSheet.compose(GlobalStyles.TextStyles(theme)['body'], {\n                  color: Constants['colours']?.zcontrast,\n                }),\n                dimensions.width\n              )}\n            >\n              {Constants['project_details'] &&\n                Constants['project_details'][0].success_message}\n            </Text>\n          </KeyboardAvoidingView>\n          {/* Footer */}\n          <View\n            style={StyleSheet.applyWidth(\n              GlobalStyles.ViewStyles(theme)['Footer Div'],\n              dimensions.width\n            )}\n          >\n            {/* CTA Button */}\n            <View\n              style={StyleSheet.applyWidth(\n                { alignSelf: 'flex-end' },\n                dimensions.width\n              )}\n            >\n              {/* Reset Session Values */}\n              <Button\n                disabledOpacity={0.3}\n                onPress={() => {\n                  console.log('Reset Session Values ON_PRESS Start');\n                  let error = null;\n                  try {\n                    console.log('Start ON_PRESS:0 NAVIGATE');\n                    navigation.navigate('IndexRedirectScreen');\n                    console.log('Complete ON_PRESS:0 NAVIGATE');\n                  } catch (err) {\n                    console.error(err);\n                    error = err.message ?? err;\n                  }\n                  console.log(\n                    'Reset Session Values ON_PRESS Complete',\n                    error ? { error } : 'no error'\n                  );\n                }}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(\n                    GlobalStyles.ButtonStyles(theme)['Button CTA'],\n                    {\n                      backgroundColor: [\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value: theme.colors['zAccent'],\n                        },\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value:\n                            Constants['project_details'] &&\n                            Constants['project_details'][0].colour,\n                        },\n                      ],\n                    }\n                  ),\n                  dimensions.width\n                )}\n                title={`${\n                  Constants['project_details'] &&\n                  Constants['project_details'][0].cta_restart\n                }`}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(SuccessScreen);\n","export const isOkStatus = status => status >= 200 && status < 300;\n\nexport const handleResponse = async (res, handlers = {}) => {\n  const { status, statusText } = res;\n  const text = await res.text();\n  let json;\n  try {\n    json = JSON.parse(text);\n  } catch (e) {\n    console.error(\n      [\n        'Failed to parse response text as JSON.',\n        `Error: ${e.message}`,\n        `Text: ${JSON.stringify(text)}`,\n      ].join(' ')\n    );\n  }\n\n  const ret = {\n    status,\n    statusText,\n    text,\n    json,\n  };\n\n  if (handlers.onData) {\n    handlers.onData(json);\n  }\n  if (status === 401 && handlers.on401) {\n    handlers.on401(ret);\n  }\n  if (status === 403 && handlers.on403) {\n    handlers.on403(ret);\n  }\n  if (status === 404 && handlers.on404) {\n    handlers.on404(ret);\n  }\n  if (status < 200 && handlers.on1xx) {\n    handlers.on1xx(ret);\n  } else if (isOkStatus(status) && handlers.on2xx) {\n    handlers.on2xx(ret);\n  } else if (status >= 300 && status < 400 && handlers.on3xx) {\n    handlers.on3xx(ret);\n  } else if (status >= 400 && status < 500 && handlers.on4xx) {\n    handlers.on4xx(ret);\n  } else if (status >= 500 && handlers.on5xx) {\n    handlers.on5xx(ret);\n  }\n\n  return ret;\n};\n","import { useRef, useEffect } from 'react';\n\nexport default function (value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import { Platform } from 'react-native';\nimport { osVersion } from 'expo-device';\n\n/*\n * IOS 17 introduces new automatic encoding rules that leads to double encoding\n * when encoding is done on the JS level, this skips encoding for devices with\n * IOS 17 or higher.\n * https://forums.developer.apple.com/forums/thread/738432\n * https://github.com/axios/axios/issues/6102\n * https://github.com/facebook/react-native/issues/39793\n */\n\nlet isIos17OrNewer = false;\nif (Platform.OS === 'ios') {\n  const splitVersion = osVersion.split('.');\n  if (splitVersion.length > 0) {\n    const majorVersion = Number(splitVersion[0]);\n    isIos17OrNewer = typeof majorVersion === 'number' && majorVersion >= 17;\n  }\n}\n\nconst encodeQueryParam = param => {\n  if (isIos17OrNewer) {\n    return param;\n  } else {\n    return encodeURIComponent(param);\n  }\n};\n\nexport default encodeQueryParam;\n","import * as React from 'react';\nimport {\n  useQuery,\n  useMutation,\n  useIsFetching,\n  useQueryClient,\n} from 'react-query';\nimport useFetch from 'react-fetch-hook';\nimport { useIsFocused } from '@react-navigation/native';\nimport { handleResponse, isOkStatus } from '../utils/handleRestApiResponse';\nimport usePrevious from '../utils/usePrevious';\nimport encodeQueryParam from '../utils/encodeQueryParam';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\n\nexport const createRespondentPOST = (\n  Constants,\n  { consent, email },\n  handlers = {}\n) =>\n  fetch(`/api/respondent/`, {\n    body: JSON.stringify({ email: email, consent: consent }),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      externalId: Constants['externalID'],\n      projectId: Constants['project'],\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useCreateRespondentPOST = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args =>\n      createRespondentPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('user', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('user');\n        queryClient.invalidateQueries('users');\n      },\n    }\n  );\n};\n\nexport const FetchCreateRespondentPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  consent,\n  email,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useCreateRespondentPOST(\n    { consent, email },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchCreateRespondent: refetch });\n};\n\nexport const projectGET = (Constants, _args, handlers = {}) =>\n  fetch(`/api/project/`, {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      projectId: Constants['project'],\n    },\n  }).then(res => handleResponse(res, handlers));\n\nexport const useProjectGET = (\n  args = {},\n  { refetchInterval, handlers = {} } = {}\n) => {\n  const Constants = GlobalVariables.useValues();\n  const queryClient = useQueryClient();\n  return useQuery(\n    ['project', args],\n    () => projectGET(Constants, args, handlers),\n    {\n      refetchInterval,\n      onSuccess: () => queryClient.invalidateQueries(['projects']),\n    }\n  );\n};\n\nexport const FetchProjectGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useProjectGET({}, { refetchInterval, handlers: { onData, ...handlers } });\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchProject: refetch });\n};\n\nexport const replyPOST = (Constants, { message }, handlers = {}) =>\n  fetch(`/api/reply/`, {\n    body: JSON.stringify({ message: message }),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      projectId: Constants['project'],\n      uuid: Constants['user_id'],\n    },\n    method: 'POST',\n  }).then(res => handleResponse(res, handlers));\n\nexport const useReplyPOST = (initialArgs = {}, { handlers = {} } = {}) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => replyPOST(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('answer', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('answer');\n        queryClient.invalidateQueries('answers');\n      },\n    }\n  );\n};\n\nexport const FetchReplyPOST = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  message,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    mutate: refetch,\n  } = useReplyPOST(\n    { message },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchReply: refetch });\n};\n\nexport const startInterviewGET = (Constants, { first_answer }, handlers = {}) =>\n  fetch(\n    `/api/interview/?first_answer=${encodeQueryParam(\n      `${\n        typeof first_answer === 'string'\n          ? first_answer\n          : JSON.stringify(first_answer ?? '')\n      }`\n    )}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        projectId: Constants['project'],\n        uuid: Constants['user_id'],\n      },\n    }\n  ).then(res => handleResponse(res, handlers));\n\nexport const useStartInterviewGET = (\n  initialArgs = {},\n  { handlers = {} } = {}\n) => {\n  const queryClient = useQueryClient();\n  const Constants = GlobalVariables.useValues();\n  return useMutation(\n    args => startInterviewGET(Constants, { ...initialArgs, ...args }, handlers),\n    {\n      onError: (err, variables, { previousValue }) => {\n        if (previousValue) {\n          return queryClient.setQueryData('interview', previousValue);\n        }\n      },\n      onSettled: () => {\n        queryClient.invalidateQueries('interview');\n        queryClient.invalidateQueries('interviews');\n      },\n    }\n  );\n};\n\nexport const FetchStartInterviewGET = ({\n  children,\n  onData = () => {},\n  handlers = {},\n  refetchInterval,\n  first_answer,\n}) => {\n  const Constants = GlobalVariables.useValues();\n  const isFocused = useIsFocused();\n  const prevIsFocused = usePrevious(isFocused);\n\n  const {\n    isLoading: loading,\n    data,\n    error,\n    refetch,\n  } = useStartInterviewGET(\n    { first_answer },\n    { refetchInterval, handlers: { onData, ...handlers } }\n  );\n\n  React.useEffect(() => {\n    if (!prevIsFocused && isFocused) {\n      refetch();\n    }\n  }, [isFocused, prevIsFocused]);\n\n  React.useEffect(() => {\n    if (error) {\n      console.error('Fetch error: ' + error.status + ' ' + error.statusText);\n      console.error(error);\n    }\n  }, [error]);\n  return children({ loading, data, error, refetchStartInterview: refetch });\n};\n","import React from 'react';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as BackendApi from '../apis/BackendApi.js';\nimport HeaderBlock from '../components/HeaderBlock';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport {\n  Button,\n  KeyboardAvoidingView,\n  Link,\n  ScreenContainer,\n  TextInput,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Keyboard, Text, View } from 'react-native';\n\nconst TopicScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const [cta_disable, setCta_disable] = React.useState(true);\n  const [input, setInput] = React.useState('');\n  const [input_disable, setInput_disable] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const calculateMinutesPassed = timestamp => {\n    // Parse the timestamp into a Date object\n    const pastDate = new Date(timestamp);\n\n    // Get the current date\n    const now = new Date();\n\n    // Calculate the difference in milliseconds\n    const diffInMs = now - pastDate;\n\n    // Convert milliseconds to minutes and round down\n    // Note: 1 minute = 60,000 milliseconds\n    const diffInMinutes = Math.floor(diffInMs / (60 * 1000));\n\n    return diffInMinutes;\n  };\n\n  const getProjectTopic = (timestamp, projectTopics) => {\n    // Parse the timestamp into a Date object\n    const pastDate = new Date(timestamp);\n\n    // Get the current date\n    const now = new Date();\n\n    // Calculate the difference in milliseconds\n    const diffInMs = now - pastDate;\n\n    // Convert milliseconds to minutes and round down\n    const minPassed = Math.floor(diffInMs / (60 * 1000));\n\n    // Loop through the projectTopics array\n    for (let i = 0; i < projectTopics.length; i++) {\n      // If quit_after of the current project topic is greater than minPassed\n      if (projectTopics[i].quit_after > minPassed) {\n        // Return the project topic\n        return projectTopics[i];\n      }\n    }\n\n    // If no project topic was found that satisfies the condition, return \"exit\"\n    return 'exit';\n  };\n\n  const waitQuestionsStored = async Variables => {\n    try {\n      // ensure first POST request is completed\n      await researchDBSaveQuestion$AnswerPOST.mutateAsync({\n        message: Constants['question'],\n        proejct_id: Constants['project'],\n        role: 'assistant',\n        topicID: topic_id,\n        user_id: Constants['user_id'],\n      });\n\n      // ensure second POST request is completed\n      await researchDBSaveQuestion$AnswerPOST.mutateAsync({\n        message: input,\n        proejct_id: Constants['project'],\n        role: 'user',\n        topicID: topic_id,\n        user_id: Constants['user_id'],\n      });\n\n      // only after both POST requests have completed, initiate refetch\n      await refetchHistory();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const backendStartInterviewGET = BackendApi.useStartInterviewGET();\n  const backendReplyPOST = BackendApi.useReplyPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    const handler = async () => {\n      console.log('Screen ON_SCREEN_FOCUS Start');\n      let error = null;\n      try {\n        if (!isFocused) {\n          return;\n        }\n        console.log('Start ON_SCREEN_FOCUS:0 NAVIGATE');\n        if (Constants['user_id'] === '') {\n          navigation.navigate('WelcomeScreen');\n          console.log('Complete ON_SCREEN_FOCUS:0 NAVIGATE');\n        } else {\n          console.log('Skipped ON_SCREEN_FOCUS:0 NAVIGATE: condition not met');\n        }\n        console.log('Start ON_SCREEN_FOCUS:1 FETCH_REQUEST');\n        const RespondQuestion = (\n          await backendStartInterviewGET.mutateAsync({\n            first_answer: Constants['first_answer'],\n          })\n        )?.json;\n        console.log('Complete ON_SCREEN_FOCUS:1 FETCH_REQUEST', {\n          RespondQuestion,\n        });\n        console.log('Start ON_SCREEN_FOCUS:2 NAVIGATE');\n        if (RespondQuestion?.status === 'closed') {\n          navigation.navigate('SuccessScreen');\n          console.log('Complete ON_SCREEN_FOCUS:2 NAVIGATE');\n        } else {\n          console.log('Skipped ON_SCREEN_FOCUS:2 NAVIGATE: condition not met');\n        }\n        console.log('Start ON_SCREEN_FOCUS:3 SET_VARIABLE');\n        setGlobalVariableValue({\n          key: 'question',\n          value: RespondQuestion?.response,\n        });\n        console.log('Complete ON_SCREEN_FOCUS:3 SET_VARIABLE');\n      } catch (err) {\n        console.error(err);\n        error = err.message ?? err;\n      }\n      console.log(\n        'Screen ON_SCREEN_FOCUS Complete',\n        error ? { error } : 'no error'\n      );\n    };\n    handler();\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={false}\n      hasTopSafeArea={true}\n      scrollable={true}\n      style={StyleSheet.applyWidth(\n        StyleSheet.compose(\n          GlobalStyles.ScreenContainerStyles(theme)['Screen Layout'],\n          { backgroundColor: theme.colors['! WHITE'] }\n        ),\n        dimensions.width\n      )}\n    >\n      <>\n        {Constants['project_details'] &&\n        Constants['project_details'][0].skip_welcome ? null : (\n          <HeaderBlock />\n        )}\n      </>\n      {/* Main Frame + Fetch */}\n      <View\n        style={StyleSheet.applyWidth(\n          StyleSheet.compose(GlobalStyles.ViewStyles(theme)['Main Frame Div'], {\n            backgroundColor: Constants['colours']?.zbase,\n          }),\n          dimensions.width\n        )}\n      >\n        {/* max width container */}\n        <View\n          style={StyleSheet.applyWidth(\n            GlobalStyles.ViewStyles(theme)['max width container'],\n            dimensions.width\n          )}\n        >\n          {/* Question and Answer */}\n          <View\n            style={StyleSheet.applyWidth(\n              {\n                paddingBottom: 32,\n                paddingLeft: 32,\n                paddingRight: 32,\n                paddingTop: 32,\n              },\n              dimensions.width\n            )}\n          >\n            {/* Question 2 */}\n            <View\n              style={StyleSheet.applyWidth(\n                StyleSheet.compose(\n                  GlobalStyles.ViewStyles(theme)['question div'],\n                  {\n                    backgroundColor: [\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: theme.colors['zBase'],\n                      },\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: Constants['colours']?.zbase,\n                      },\n                    ],\n                  }\n                ),\n                dimensions.width\n              )}\n            >\n              {/* question title */}\n              <Text\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(GlobalStyles.TextStyles(theme)['title'], {\n                    color:\n                      Constants['project_details'] &&\n                      Constants['project_details'][0].colour,\n                  }),\n                  dimensions.width\n                )}\n              >\n                {Constants['project_details'] &&\n                  Constants['project_details'][0].question_title}\n              </Text>\n              {/* question */}\n              <>\n                {!Constants['question'] ? null : (\n                  <Text\n                    style={StyleSheet.applyWidth(\n                      StyleSheet.compose(\n                        GlobalStyles.TextStyles(theme)['body'],\n                        { color: Constants['colours']?.zcontrast }\n                      ),\n                      dimensions.width\n                    )}\n                  >\n                    {Constants['question']}\n                  </Text>\n                )}\n              </>\n              {/* Loading */}\n              <>\n                {Constants['question'] ? null : (\n                  <View\n                    style={StyleSheet.applyWidth(\n                      { flexDirection: 'row' },\n                      dimensions.width\n                    )}\n                  >\n                    {/* loading */}\n                    <Text\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['body'],\n                          { color: Constants['colours']?.zcontrast }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {Constants['project_details'] &&\n                        Constants['project_details'][0].loading}\n                    </Text>\n                  </View>\n                )}\n              </>\n            </View>\n            {/* Content 2 */}\n            <View>\n              {/* title */}\n              <Text\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(GlobalStyles.TextStyles(theme)['title'], {\n                    color: [\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: theme.colors['! Disabled Text'],\n                      },\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: Constants['colours']?.disabledtext,\n                      },\n                    ],\n                  }),\n                  dimensions.width\n                )}\n              >\n                {Constants['project_details'] &&\n                  Constants['project_details'][0].answer_title}\n              </Text>\n              {/* Answer Input */}\n              <TextInput\n                autoCapitalize={'none'}\n                autoCorrect={true}\n                autoFocus={true}\n                changeTextDelay={500}\n                clearButtonMode={'never'}\n                clearTextOnFocus={false}\n                disabled={Constants['question'] === ''}\n                enablesReturnKeyAutomatically={true}\n                keyboardAppearance={'dark'}\n                keyboardType={'default'}\n                multiline={true}\n                onChangeText={newAnswerInputValue => {\n                  try {\n                    setInput(newAnswerInputValue);\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                onSubmitEditing={() => {\n                  try {\n                    Keyboard.dismiss();\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n                placeholder={(\n                  Constants['project_details'] &&\n                  Constants['project_details'][0].answer_placeholder\n                ).toString()}\n                placeholderTextColor={theme.colors['! Disabled Text']}\n                returnKeyType={'done'}\n                spellcheck={true}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(\n                    GlobalStyles.TextInputStyles(theme)['Answer Input'],\n                    {\n                      backgroundColor: Constants['colours']?.inputbckg,\n                      color: [\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value: theme.colors['zContrast'],\n                        },\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value: Constants['colours']?.zcontrast,\n                        },\n                      ],\n                      height: 120,\n                    }\n                  ),\n                  dimensions.width\n                )}\n                value={input}\n              />\n              <Text\n                accessible={true}\n                allowFontScaling={true}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(GlobalStyles.TextStyles(theme)['Text'], {\n                    color: [\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: theme.colors['! Disabled Text'],\n                      },\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: Constants['colours']?.disabledtext,\n                      },\n                    ],\n                    fontSize: 10,\n                    marginTop: 16,\n                  }),\n                  dimensions.width\n                )}\n              >\n                {Constants['project_details'] &&\n                  Constants['project_details'][0].inline_consent}\n              </Text>\n            </View>\n          </View>\n          {/* Footer with fetch */}\n          <View\n            style={StyleSheet.applyWidth(\n              GlobalStyles.ViewStyles(theme)['Footer Div'],\n              dimensions.width\n            )}\n          >\n            {/* CTA Area */}\n            <View\n              style={StyleSheet.applyWidth(\n                {\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  width: '100%',\n                },\n                dimensions.width\n              )}\n            >\n              {/* Abort */}\n              <View\n                style={StyleSheet.applyWidth(\n                  {\n                    borderBottomWidth: 1,\n                    borderColor: [\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: theme.colors['! Disabled Text'],\n                      },\n                      {\n                        minWidth: Breakpoints.Mobile,\n                        value: Constants['colours']?.disabledtext,\n                      },\n                    ],\n                    borderStyle: 'dotted',\n                    paddingBottom: 4,\n                  },\n                  dimensions.width\n                )}\n              >\n                {/* CTA Abort */}\n                <Link\n                  onPress={() => {\n                    try {\n                      setInput('');\n                      setGlobalVariableValue({\n                        key: 'user_id',\n                        value: '',\n                      });\n                      navigation.navigate('SuccessScreen');\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  }}\n                  style={StyleSheet.applyWidth(\n                    StyleSheet.compose(GlobalStyles.LinkStyles(theme)['Link'], {\n                      color: [\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value: theme.colors['! Disabled Text'],\n                        },\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value: Constants['colours']?.disabledtext,\n                        },\n                      ],\n                      fontFamily: 'Inter_600SemiBold',\n                      fontSize: 10,\n                      textTransform: 'uppercase',\n                    }),\n                    dimensions.width\n                  )}\n                  title={`${\n                    Constants['project_details'] &&\n                    Constants['project_details'][0].cta_abort\n                  }`}\n                />\n              </View>\n              {/* Reply */}\n              <Button\n                disabled={input === ''}\n                disabledOpacity={0.3}\n                onPress={() => {\n                  const handler = async () => {\n                    try {\n                      const answer = input;\n                      setInput('');\n                      setGlobalVariableValue({\n                        key: 'question',\n                        value: '',\n                      });\n                      const ReplyQuetion = (\n                        await backendReplyPOST.mutateAsync({ message: answer })\n                      )?.json;\n                      if (ReplyQuetion?.status === 'closed') {\n                        navigation.navigate('SuccessScreen');\n                      }\n                      setGlobalVariableValue({\n                        key: 'question',\n                        value: ReplyQuetion?.response,\n                      });\n                    } catch (err) {\n                      console.error(err);\n                    }\n                  };\n                  handler();\n                }}\n                style={StyleSheet.applyWidth(\n                  StyleSheet.compose(\n                    GlobalStyles.ButtonStyles(theme)['Button CTA'],\n                    {\n                      backgroundColor: [\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value: theme.colors['zAccent'],\n                        },\n                        {\n                          minWidth: Breakpoints.Mobile,\n                          value:\n                            Constants['project_details'] &&\n                            Constants['project_details'][0].colour,\n                        },\n                      ],\n                    }\n                  ),\n                  dimensions.width\n                )}\n                title={`${\n                  Constants['project_details'] &&\n                  Constants['project_details'][0].cta_reply\n                }`}\n              />\n            </View>\n          </View>\n        </View>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(TopicScreen);\n","import React from 'react';\nimport * as GlobalStyles from '../GlobalStyles.js';\nimport * as BackendApi from '../apis/BackendApi.js';\nimport HeaderBlock from '../components/HeaderBlock';\nimport * as GlobalVariables from '../config/GlobalVariableContext';\nimport changeURL from '../global-functions/changeURL';\nimport Breakpoints from '../utils/Breakpoints';\nimport * as StyleSheet from '../utils/StyleSheet';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport {\n  Button,\n  Checkbox,\n  KeyboardAvoidingView,\n  Link,\n  ScreenContainer,\n  TextInput,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport { ActivityIndicator, Text, View } from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst WelcomeScreen = props => {\n  const { theme, navigation } = props;\n  const dimensions = useWindowDimensions();\n  const Constants = GlobalVariables.useValues();\n  const Variables = Constants;\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n  const [consent, setConsent] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [warn_consent, setWarn_consent] = React.useState(false);\n  const [checkboxValue, setCheckboxValue] = React.useState(false);\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return regex.test(email);\n  };\n\n  const CheckArray = array_input => {\n    if (Array.isArray(array_input) && array_input.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const backendCreateRespondentPOST = BackendApi.useCreateRespondentPOST();\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    try {\n      if (!isFocused) {\n        return;\n      }\n      setEmail('');\n      setConsent(false);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isFocused]);\n\n  return (\n    <ScreenContainer\n      hasSafeArea={false}\n      hasTopSafeArea={true}\n      scrollable={false}\n      style={StyleSheet.applyWidth(\n        StyleSheet.compose(\n          GlobalStyles.ScreenContainerStyles(theme)['Screen Layout'],\n          { alignContent: 'space-around' }\n        ),\n        dimensions.width\n      )}\n    >\n      <>\n        {Constants['project_details'] &&\n        Constants['project_details'][0].skip_welcome ? null : (\n          <HeaderBlock />\n        )}\n      </>\n      {/* Main frame */}\n      <>\n        {Constants['project_details'] &&\n        Constants['project_details'][0].skip_welcome ? null : (\n          <View\n            style={StyleSheet.applyWidth(\n              StyleSheet.compose(\n                GlobalStyles.ViewStyles(theme)['Main Frame Div'],\n                { backgroundColor: Constants['colours']?.zbase }\n              ),\n              dimensions.width\n            )}\n          >\n            {/* max width container */}\n            <View\n              style={StyleSheet.applyWidth(\n                StyleSheet.compose(\n                  GlobalStyles.ViewStyles(theme)['max width container'],\n                  { maxWidth: { minWidth: Breakpoints.Tablet, value: 720 } }\n                ),\n                dimensions.width\n              )}\n            >\n              <KeyboardAvoidingView\n                behavior={'padding'}\n                enabled={true}\n                style={StyleSheet.applyWidth(\n                  GlobalStyles.KeyboardAvoidingViewStyles(theme)[\n                    'keyboard avoiding view'\n                  ],\n                  dimensions.width\n                )}\n              >\n                {/* Welcome Title */}\n                <Text\n                  style={StyleSheet.applyWidth(\n                    StyleSheet.compose(\n                      GlobalStyles.TextStyles(theme)['title'],\n                      {\n                        color:\n                          Constants['project_details'] &&\n                          Constants['project_details'][0].colour,\n                      }\n                    ),\n                    dimensions.width\n                  )}\n                >\n                  {Constants['project_details'] &&\n                    Constants['project_details'][0].welcome_title}{' '}\n                </Text>\n                {/* Welcome Message */}\n                <Text\n                  style={StyleSheet.applyWidth(\n                    StyleSheet.compose(GlobalStyles.TextStyles(theme)['body'], {\n                      color: Constants['colours']?.zcontrast,\n                    }),\n                    dimensions.width\n                  )}\n                >\n                  {Constants['project_details'] &&\n                    Constants['project_details'][0].welcome_message}\n                </Text>\n                {/* Welcome Second Title */}\n                <Text\n                  style={StyleSheet.applyWidth(\n                    StyleSheet.compose(\n                      GlobalStyles.TextStyles(theme)['title'],\n                      {\n                        color: [\n                          {\n                            minWidth: Breakpoints.Mobile,\n                            value: theme.colors['! Disabled Text'],\n                          },\n                          {\n                            minWidth: Breakpoints.Mobile,\n                            value: Constants['colours']?.disabledtext,\n                          },\n                        ],\n                      }\n                    ),\n                    dimensions.width\n                  )}\n                >\n                  {Constants['project_details'] &&\n                    Constants['project_details'][0].welcome_second_title}\n                </Text>\n                {/* Welcome Second Message */}\n                <Text\n                  style={StyleSheet.applyWidth(\n                    StyleSheet.compose(GlobalStyles.TextStyles(theme)['body'], {\n                      color: Constants['colours']?.zcontrast,\n                    }),\n                    dimensions.width\n                  )}\n                >\n                  {Constants['project_details'] &&\n                    Constants['project_details'][0].welcome_second_message}\n                </Text>\n                {/* Email Title */}\n                <>\n                  {!(\n                    Constants['project_details'] &&\n                    Constants['project_details'][0].collect_email\n                  ) ? null : (\n                    <Text\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextStyles(theme)['title'],\n                          {\n                            color: [\n                              {\n                                minWidth: Breakpoints.Mobile,\n                                value: theme.colors['! Disabled Text'],\n                              },\n                              {\n                                minWidth: Breakpoints.Mobile,\n                                value: Constants['colours']?.disabledtext,\n                              },\n                            ],\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                    >\n                      {Constants['project_details'] &&\n                        Constants['project_details'][0].email_title}\n                    </Text>\n                  )}\n                </>\n                {/* Email Input */}\n                <>\n                  {!(\n                    Constants['project_details'] &&\n                    Constants['project_details'][0].collect_email\n                  ) ? null : (\n                    <TextInput\n                      autoCapitalize={'none'}\n                      changeTextDelay={500}\n                      clearButtonMode={'always'}\n                      clearTextOnFocus={false}\n                      enablesReturnKeyAutomatically={true}\n                      keyboardType={'email-address'}\n                      numberOfLines={1}\n                      onChangeText={newEmailInputValue => {\n                        try {\n                          setEmail(newEmailInputValue);\n                        } catch (err) {\n                          console.error(err);\n                        }\n                      }}\n                      placeholder={(\n                        Constants['project_details'] &&\n                        Constants['project_details'][0].email_placeholder\n                      ).toString()}\n                      placeholderTextColor={theme.colors['! Disabled Text']}\n                      spellcheck={true}\n                      style={StyleSheet.applyWidth(\n                        StyleSheet.compose(\n                          GlobalStyles.TextInputStyles(theme)['Input Field'],\n                          {\n                            backgroundColor: Constants['colours']?.inputbckg,\n                            borderColor: Constants['colours']?.hrline,\n                            color: [\n                              {\n                                minWidth: Breakpoints.Mobile,\n                                value: theme.colors['zContrast'],\n                              },\n                              {\n                                minWidth: Breakpoints.Mobile,\n                                value: Constants['colours']?.zcontrast,\n                              },\n                            ],\n                          }\n                        ),\n                        dimensions.width\n                      )}\n                      value={email}\n                    />\n                  )}\n                </>\n                {/* Consent */}\n                <>\n                  {!(\n                    Constants['project_details'] &&\n                    Constants['project_details'][0].consent\n                  ) ? null : (\n                    <View\n                      style={StyleSheet.applyWidth(\n                        { flexDirection: 'row', marginTop: 12 },\n                        dimensions.width\n                      )}\n                    >\n                      {/* consent_warning */}\n                      <>\n                        {!warn_consent ? null : (\n                          <View\n                            style={StyleSheet.applyWidth(\n                              {\n                                backgroundColor: theme.colors['Error'],\n                                height: 2,\n                                marginTop: -8,\n                                position: 'absolute',\n                                width: '100%',\n                              },\n                              dimensions.width\n                            )}\n                          />\n                        )}\n                      </>\n                      <Checkbox\n                        color={theme.colors['Custom Color']}\n                        onCheck={() => {\n                          const checkboxValue = undefined;\n                          try {\n                            if (\n                              !(\n                                Constants['project_details'] &&\n                                Constants['project_details'][0].collect_email\n                              )\n                            ) {\n                              setEmail('no@email.com');\n                            }\n                          } catch (err) {\n                            console.error(err);\n                          }\n                        }}\n                        onPress={newCheckboxValue => {\n                          const checkboxValue = newCheckboxValue;\n                          try {\n                            setConsent(newCheckboxValue);\n                          } catch (err) {\n                            console.error(err);\n                          }\n                        }}\n                        status={consent}\n                        style={StyleSheet.applyWidth(\n                          StyleSheet.compose(\n                            GlobalStyles.CheckboxStyles(theme)['checkbox'],\n                            { marginRight: 12 }\n                          ),\n                          dimensions.width\n                        )}\n                        uncheckedColor={theme.colors['zContrast']}\n                      />\n                      <Text\n                        style={StyleSheet.applyWidth(\n                          StyleSheet.compose(\n                            GlobalStyles.TextStyles(theme)['body'],\n                            {\n                              color: Constants['colours']?.zcontrast,\n                              fontSize: [\n                                { minWidth: Breakpoints.Mobile, value: 10 },\n                                { minWidth: Breakpoints.Tablet, value: 12 },\n                              ],\n                            }\n                          ),\n                          dimensions.width\n                        )}\n                      >\n                        {Constants['project_details'] &&\n                          Constants['project_details'][0].consent}\n                        <Link\n                          onPress={() => {\n                            try {\n                              changeURL(\n                                Constants['project_details'] &&\n                                  Constants['project_details'][0].consent_link\n                              );\n                            } catch (err) {\n                              console.error(err);\n                            }\n                          }}\n                          style={StyleSheet.applyWidth(\n                            StyleSheet.compose(\n                              GlobalStyles.LinkStyles(theme)['Link'],\n                              {\n                                color:\n                                  Constants['project_details'] &&\n                                  Constants['project_details'][0].colour,\n                              }\n                            ),\n                            dimensions.width\n                          )}\n                          title={` ${\n                            Constants['project_details'] &&\n                            Constants['project_details'][0].consent_link\n                          }`}\n                        />\n                      </Text>\n                    </View>\n                  )}\n                </>\n              </KeyboardAvoidingView>\n              {/* Footer */}\n              <>\n                {!(Constants['project_details'] !== '') ? null : (\n                  <View\n                    style={StyleSheet.applyWidth(\n                      StyleSheet.compose(\n                        GlobalStyles.ViewStyles(theme)['Footer Div'],\n                        {\n                          alignItems: {\n                            minWidth: Breakpoints.Tablet,\n                            value: 'baseline',\n                          },\n                        }\n                      ),\n                      dimensions.width\n                    )}\n                  >\n                    {/* CTA Button */}\n                    <View\n                      style={StyleSheet.applyWidth(\n                        { alignSelf: 'flex-end' },\n                        dimensions.width\n                      )}\n                    >\n                      {/* Next */}\n                      <Button\n                        disabled={!validateEmail(email)}\n                        disabledOpacity={0.4}\n                        onPress={() => {\n                          const handler = async () => {\n                            try {\n                              if (consent === false) {\n                                setWarn_consent(true);\n                              }\n                              if (!consent) {\n                                return;\n                              }\n                              if (\n                                !(\n                                  Constants['project_details'] &&\n                                  Constants['project_details'][0].collect_email\n                                )\n                              ) {\n                                setEmail('Excluded');\n                              }\n                              const CreatedRespondent = (\n                                await backendCreateRespondentPOST.mutateAsync({\n                                  consent:\n                                    Constants['project_details'] &&\n                                    Constants['project_details'][0].consent,\n                                  email: email,\n                                })\n                              )?.json;\n                              setGlobalVariableValue({\n                                key: 'user_id',\n                                value: CreatedRespondent?.uuid,\n                              });\n                              if (CreatedRespondent?.uuid !== '') {\n                                navigation.navigate('TopicScreen');\n                              }\n                              console.log(CreatedRespondent, 'login response');\n                            } catch (err) {\n                              console.error(err);\n                            }\n                          };\n                          handler();\n                        }}\n                        style={StyleSheet.applyWidth(\n                          StyleSheet.compose(\n                            GlobalStyles.ButtonStyles(theme)['Button CTA'],\n                            {\n                              backgroundColor: [\n                                {\n                                  minWidth: Breakpoints.Mobile,\n                                  value: theme.colors['zAccent'],\n                                },\n                                {\n                                  minWidth: Breakpoints.Mobile,\n                                  value:\n                                    Constants['project_details'] &&\n                                    Constants['project_details'][0].colour,\n                                },\n                              ],\n                            }\n                          ),\n                          dimensions.width\n                        )}\n                        title={`${\n                          Constants['project_details'] &&\n                          Constants['project_details'][0].cta_next\n                        }`}\n                      />\n                    </View>\n                  </View>\n                )}\n              </>\n            </View>\n          </View>\n        )}\n      </>\n      {/* ProjectDetails */}\n      <BackendApi.FetchProjectGET\n        handlers={{\n          on2xx: projectDetailsData => {\n            const handler = async () => {\n              try {\n                const project_fetched2 = setGlobalVariableValue({\n                  key: 'project_details',\n                  value: JSON.parse(projectDetailsData?.text),\n                });\n                if (\n                  (project_fetched2 && project_fetched2[0].dark_mode) !==\n                  (props.route?.params?.TRUE ?? null)\n                ) {\n                  setGlobalVariableValue({\n                    key: 'colours',\n                    value: '',\n                  });\n                }\n                if (\n                  (project_fetched2 && project_fetched2[0].dark_mode) ===\n                  (props.route?.params?.TRUE ?? null)\n                ) {\n                  setGlobalVariableValue({\n                    key: 'colours',\n                    value: Constants['darkmode_scheme'],\n                  });\n                }\n                if (Constants['user_id'] === '') {\n                  if (\n                    (project_fetched2 && project_fetched2[0].skip_welcome) !==\n                    true\n                  ) {\n                    return;\n                  }\n                  const createdUser = (\n                    await backendCreateRespondentPOST.mutateAsync({\n                      consent: '',\n                      email: 'no@email.com',\n                    })\n                  )?.json;\n                  const createdUuid = setGlobalVariableValue({\n                    key: 'user_id',\n                    value: createdUser?.uuid,\n                  });\n                  if (createdUuid !== '') {\n                    navigation.navigate('TopicScreen');\n                  }\n                } else {\n                  if (Constants['user_id'] !== '') {\n                    navigation.navigate('TopicScreen');\n                  }\n                }\n              } catch (err) {\n                console.error(err);\n              }\n            };\n            handler();\n          },\n          on4xx: projectDetailsData => {\n            try {\n              navigation.navigate('ErrorScreen', {\n                error_type: 'Wrong Interview ID',\n              });\n              navigation.navigate('ErrorScreen', {\n                error_type: 'Interview ID missing',\n              });\n            } catch (err) {\n              console.error(err);\n            }\n          },\n          on5xx: projectDetailsData => {\n            try {\n              navigation.navigate('ErrorScreen', {\n                error_type: 'Wrong Interview ID',\n              });\n            } catch (err) {\n              console.error(err);\n            }\n          },\n        }}\n      >\n        {({ loading, error, data, refetchProject }) => {\n          const projectDetailsData = data?.json;\n          if (loading) {\n            return <ActivityIndicator />;\n          }\n\n          if (error || data?.status < 200 || data?.status >= 300) {\n            return <ActivityIndicator />;\n          }\n\n          return null;\n        }}\n      </BackendApi.FetchProjectGET>\n    </ScreenContainer>\n  );\n};\n\nexport default withTheme(WelcomeScreen);\n","import { I18nManager, Platform, StyleSheet, Text, View } from 'react-native';\nimport { systemWeights } from 'react-native-typography';\nimport { Icon, Touchable } from '@draftbit/ui';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport theme from './themes/Draftbit.js';\nimport LinkingConfiguration from './LinkingConfiguration.js';\nimport React from 'react';\nimport * as GlobalVariables from './config/GlobalVariableContext';\nimport getExternalId from './global-functions/getExternalId';\nimport getFirstAnswer from './global-functions/getFirstAnswer';\nimport getSurveyParam from './global-functions/getSurveyParam';\nimport Breakpoints from './utils/Breakpoints';\nimport useWindowDimensions from './utils/useWindowDimensions';\n\nimport ErrorScreen from './screens/ErrorScreen';\nimport IndexRedirectScreen from './screens/IndexRedirectScreen';\nimport SuccessScreen from './screens/SuccessScreen';\nimport TopicScreen from './screens/TopicScreen';\nimport WelcomeScreen from './screens/WelcomeScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default function RootAppNavigator() {\n  const Constants = GlobalVariables.useValues();\n  const setGlobalVariableValue = GlobalVariables.useSetValue();\n\n  return (\n    <NavigationContainer\n      theme={{\n        ...DefaultTheme,\n        colors: {\n          ...DefaultTheme.colors,\n          background: '#FBFCFD',\n        },\n      }}\n      linking={LinkingConfiguration}\n    >\n      <Stack.Navigator\n        initialRouteName=\"IndexRedirectScreen\"\n        screenOptions={({ navigation }) => ({ headerShown: false })}\n      >\n        <Stack.Screen\n          name=\"WelcomeScreen\"\n          component={WelcomeScreen}\n          options={({ navigation }) => ({\n            title: 'Welcome',\n          })}\n        />\n        <Stack.Screen\n          name=\"TopicScreen\"\n          component={TopicScreen}\n          options={({ navigation }) => ({\n            title: 'Topic',\n          })}\n        />\n        <Stack.Screen\n          name=\"IndexRedirectScreen\"\n          component={IndexRedirectScreen}\n          options={({ navigation }) => ({\n            title: 'Index - Redirect',\n          })}\n        />\n        <Stack.Screen\n          name=\"ErrorScreen\"\n          component={ErrorScreen}\n          options={({ navigation }) => ({\n            title: 'Error',\n          })}\n        />\n        <Stack.Screen\n          name=\"SuccessScreen\"\n          component={SuccessScreen}\n          options={({ navigation }) => ({\n            title: 'Success',\n          })}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","export default {\n  Qvantify: require('../assets/images/Qvantify.png'),\n};\n","import { Image } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport IMAGES from './Images.js';\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nfunction cacheFonts(fonts) {\n  return fonts.map(font => Font.loadAsync(font));\n}\n\nexport default function cacheAssetsAsync() {\n  const imageAssets = cacheImages(Object.values(IMAGES));\n  const iconAssets = cacheFonts([Ionicons.font]);\n\n  return Promise.all([...imageAssets, ...iconAssets]);\n}\n","export default {\n  Inter_600SemiBold: require('../assets/fonts/Inter_600SemiBold.ttf'),\n  Inter_400Regular: require('../assets/fonts/Inter_400Regular.ttf'),\n  Inter_700Bold: require('../assets/fonts/Inter_700Bold.ttf'),\n};\n","import * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport * as SplashScreen from 'expo-splash-screen';\nimport {\n  SafeAreaProvider,\n  initialWindowMetrics,\n} from 'react-native-safe-area-context';\nimport { View, Text, ActivityIndicator, AppState } from 'react-native';\nimport { Provider as ThemeProvider } from '@draftbit/ui';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport AppNavigator from './AppNavigator';\nimport Draftbit from './themes/Draftbit.js';\nimport cacheAssetsAsync from './config/cacheAssetsAsync';\nimport { GlobalVariableProvider } from './config/GlobalVariableContext';\nimport { useFonts } from 'expo-font';\nimport Fonts from './config/Fonts.js';\nSplashScreen.preventAutoHideAsync();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const [areAssetsCached, setAreAssetsCached] = React.useState(false);\n\n  const [fontsLoaded] = useFonts({\n    Inter_600SemiBold: Fonts.Inter_600SemiBold,\n    Inter_400Regular: Fonts.Inter_400Regular,\n    Inter_700Bold: Fonts.Inter_700Bold,\n  });\n\n  React.useEffect(() => {\n    async function prepare() {\n      try {\n        await cacheAssetsAsync();\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setAreAssetsCached(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n  const isReady = areAssetsCached && fontsLoaded;\n  const onLayoutRootView = React.useCallback(async () => {\n    if (isReady) {\n      await SplashScreen.hideAsync();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    return null;\n  }\n\n  return (\n    <SafeAreaProvider\n      initialMetrics={initialWindowMetrics}\n      onLayout={onLayoutRootView}\n    >\n      <GlobalVariableProvider>\n        <QueryClientProvider client={queryClient}>\n          <ThemeProvider theme={Draftbit}>\n            <AppNavigator />\n          </ThemeProvider>\n        </QueryClientProvider>\n      </GlobalVariableProvider>\n    </SafeAreaProvider>\n  );\n};\n\nexport default App;\n","//******* FILE IS COPIED FROM ../builder/src/utilities/StyleSheet.js ******\n//************************* DO NOT EDIT BY HAND ************************\nexport const create = styles => styles;\n\n// Like StyleSheet.compose, but concatenates shared keys' values into arrays.\nexport const compose = (style1, style2) => {\n  const res = { ...style1 };\n  if (!style1) {\n    return style2;\n  }\n  if (!style2) {\n    return style1;\n  }\n  for (const [k, v] of Object.entries(style2)) {\n    let resV = res[k];\n    if (resV === undefined) {\n      res[k] = v;\n    } else if (Array.isArray(resV) && Array.isArray(v)) {\n      res[k] = resV.concat(v);\n    } else if (Array.isArray(resV)) {\n      res[k] = resV.concat([v]);\n    } else if (Array.isArray(v)) {\n      res[k] = [resV].concat(v);\n    } else {\n      res[k] = [resV, v];\n    }\n  }\n  return res;\n};\n\nconst isValidStyleValue = value =>\n  value !== \"\" && [\"string\", \"number\"].includes(typeof value);\n\n// Given a window width, convert a the style to a StyleSheet style, using values from\n// the highest and most recent minWidth for each style key, which fits within the minWidth.\n//\n// Also filters to output specific style keys based on the 'styleKeys' argument. Returns all if undefined\nexport const applyWidth = (style, width, styleKeys) => {\n  const res = {};\n  if (!style) {\n    return {};\n  }\n  for (const [k, v] of Object.entries(style)) {\n    if (Array.isArray(styleKeys) && !styleKeys.includes(k)) {\n      continue;\n    }\n\n    let resV;\n    // If there is an array of values, choose the last one with the largest minWidth\n    // which fits in the current screen width\n    if (Array.isArray(v)) {\n      let maxMinWidth = 0;\n      v.filter(innerV => innerV !== undefined && innerV !== null).forEach(\n        innerV => {\n          const minWidth = innerV.minWidth ?? 0;\n          const value = innerV.value ?? innerV;\n          if (\n            isValidStyleValue(value) &&\n            minWidth <= width &&\n            minWidth >= maxMinWidth\n          ) {\n            resV = value;\n            maxMinWidth = minWidth;\n          }\n        }\n      );\n      // Otherwise, check if the value fits in the current screen width\n    } else if (v !== undefined && v !== null) {\n      const minWidth = v.minWidth ?? 0;\n      const value = v.value ?? v;\n      if (isValidStyleValue(value) && minWidth <= width) {\n        resV = value;\n      }\n    }\n    if (resV !== undefined && resV !== null) {\n      res[k] = resV;\n    }\n  }\n  return res;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [444], () => (__webpack_require__(55819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["disabledOpacity","roundness","colors","Background","Divider","Error","Light","Medium","Primary","Secondary","Strong","Surface","background","custom_rgb69_191_66","disabledText","divider","error","hRLine","inputBckg","light","lightInverse","medium","mediumInverse","primary","secondary","strong","strongInverse","surface","wHITE","zAccent","zBase","zContrast","typography","body1","_objectSpread","systemWeights","regular","fontSize","letterSpacing","lineHeight","body2","button","bold","caption","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","prefix","Linking","createURL","e","renderLinkingPrefix","enabled","Platform","OS","prefixes","config","screens","DeviceVariables","colours","darkmode_scheme","zbase","hrline","inputbckg","zcontrast","disabledtext","externalID","first_answer","project","project_details","question","user_id","__env__","GlobalVariableContext","React","GlobalVariableUpdater","tryParseJson","str","JSON","parse","_unused","GlobalVariable","_createClass","_classCallCheck","key","value","_syncToLocalStorage","_asyncToGenerator","values","update","Object","entries","filter","_ref","_slicedToArray","map","_ref3","_ref4","stringify","length","AsyncStorage","multiSet","_x","apply","arguments","_loadLocalStorage","keys","withDefaults","multiGet","_ref5","_ref6","key_","fromEntries","State","state","_ref7","type","payload","defaultValues","__loaded","_defineProperty","GlobalVariableProvider","_ref8","children","_React$useReducer","reducer","initialState","_React$useReducer2","dispatch","_prepare","SplashScreen","prepare","_initialStorageLoader","loadLocalStorage","console","log","err","initialStorageLoader","_syncToAsyncStorage","syncToLocalStorage","syncToAsyncStorage","onLayoutRootView","_jsx","Provider","onLayout","useSetValue","_ref0","useValues","_State","queryString","window","location","search","externalId","URLSearchParams","get","firstAnswer","surveyValue","dimensions","useDefaultWindowDimensions","width","innerWidth","height","innerHeight","TextInputStyles","theme","StyleSheet","create","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","borderBottomWidth","borderColor","borderLeftWidth","borderRadius","borderRightWidth","borderTopLeftRadius","borderTopRightRadius","borderTopWidth","fontFamily","marginTop","paddingBottom","paddingLeft","paddingRight","paddingTop","minWidth","Breakpoints","marginBottom","ButtonStyles","marginLeft","textAlign","ScreenContainerStyles","flexDirection","TextStyles","Text","color","body","alignSelf","h1","h2","title","textTransform","ViewStyles","alignItems","Header","flexGrow","justifyContent","marginRight","maxWidth","minHeight","IconStyles","icon","KeyboardAvoidingViewStyles","LinkStyles","Link","withTheme","props","_Constants$colours","_Constants$colours2","useWindowDimensions","Constants","GlobalVariables","Variables","researchDBSaveQuestion$AnswerPOST","mutateAsync","message","proejct_id","role","topicID","topic_id","input","refetchHistory","View","style","applyWidth","compose","GlobalStyles","Image","resizeMode","source","uri","logo","url","open","_props$route$params$e","_props$route","_props$route$params","navigation","_jsxs","ScreenContainer","hasSafeArea","hasTopSafeArea","scrollable","HeaderBlock","KeyboardAvoidingView","behavior","Icon","name","size","route","params","error_type","Button","onPress","changeURL","_err$message","navigate","_err$message2","setGlobalVariableValue","isFocused","useIsFocused","getSurveyParam","survey","FirstAnswer","getFirstAnswer","getExternalId","SVG","_Fragment","skip_welcome","colour","success_title","success_message","cta_restart","handleResponse","res","json","handlers","undefined","status","statusText","text","join","ret","onData","on401","on403","on404","on1xx","isOkStatus","on2xx","on3xx","on4xx","on5xx","ref","useRef","useEffect","current","isIos17OrNewer","splitVersion","osVersion","split","majorVersion","Number","param","encodeURIComponent","useCreateRespondentPOST","initialArgs","_ref2$handlers","queryClient","useQueryClient","useMutation","args","consent","email","fetch","headers","Accept","projectId","method","then","createRespondentPOST","onError","variables","previousValue","setQueryData","onSettled","invalidateQueries","useProjectGET","refetchInterval","_ref5$handlers","useQuery","_args","projectGET","onSuccess","FetchProjectGET","_ref6$onData","_ref6$handlers","prevIsFocused","usePrevious","_useProjectGET","loading","isLoading","data","refetch","refetchProject","useReplyPOST","_ref8$handlers","uuid","replyPOST","_ref9","useStartInterviewGET","_ref10$handlers","_ref1","encodeQueryParam","startInterviewGET","_ref11","_Constants$colours3","_Constants$colours4","_Constants$colours5","_Constants$colours6","_Constants$colours7","_Constants$colours8","_Constants$colours9","_Constants$colours0","_React$useState","_React$useState2","_React$useState3","_React$useState4","setInput","_React$useState5","_React$useState6","_React$useState7","_React$useState8","backendStartInterviewGET","BackendApi","backendReplyPOST","handler","_ref2","_yield$backendStartIn","RespondQuestion","response","question_title","answer_title","TextInput","autoCapitalize","autoCorrect","autoFocus","changeTextDelay","clearButtonMode","clearTextOnFocus","disabled","enablesReturnKeyAutomatically","keyboardAppearance","keyboardType","multiline","onChangeText","newAnswerInputValue","onSubmitEditing","Keyboard","dismiss","placeholder","answer_placeholder","toString","placeholderTextColor","returnKeyType","spellcheck","accessible","allowFontScaling","inline_consent","borderStyle","cta_abort","_yield$backendReplyPO","answer","ReplyQuetion","cta_reply","setConsent","setEmail","warn_consent","setWarn_consent","backendCreateRespondentPOST","alignContent","welcome_title","welcome_message","welcome_second_title","welcome_second_message","collect_email","email_title","numberOfLines","newEmailInputValue","email_placeholder","position","Checkbox","onCheck","newCheckboxValue","uncheckedColor","consent_link","test","validateEmail","_yield$backendCreateR","CreatedRespondent","cta_next","projectDetailsData","_props$route$params$T","_props$route$params$T2","_props$route2","_props$route2$params","project_fetched2","dark_mode","TRUE","_yield$backendCreateR2","createdUser","ActivityIndicator","Stack","createStackNavigator","createBottomTabNavigator","RootAppNavigator","NavigationContainer","DefaultTheme","linking","LinkingConfiguration","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","WelcomeScreen","options","TopicScreen","IndexRedirectScreen","ErrorScreen","SuccessScreen","Qvantify","require","cacheAssetsAsync","imageAssets","IMAGES","image","prefetch","Asset","fromModule","downloadAsync","iconAssets","Ionicons","font","Font","loadAsync","Promise","all","concat","_toConsumableArray","Inter_600SemiBold","Inter_400Regular","Inter_700Bold","Notifications","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","QueryClient","areAssetsCached","setAreAssetsCached","_useFonts","useFonts","Fonts","fontsLoaded","warn","isReady","SafeAreaProvider","initialMetrics","initialWindowMetrics","QueryClientProvider","client","ThemeProvider","Draftbit","AppNavigator","exports","styles","style1","style2","k","v","resV","Array","isArray","isValidStyleValue","includes","styleKeys","maxMinWidth","innerV","forEach","_innerV$minWidth","_innerV$value","_v$minWidth","_v$value","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","id","loaded","__webpack_modules__","call","m","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}